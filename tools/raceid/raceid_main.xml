<tool id="raceid3" name="RaceID3" version="@VERSION@.0">
    <description>Race ID pipeline for single-cell RNA analysis</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '@SCRIPTS_DIR@/raceid3_allforone.R' '$rconf_main' >&2
    ]]></command>
    <configfiles>
        <configfile name="rconf_main">
scripts.dir = '@SCRIPTS_DIR@'
count.matrix = '$section_filter.inp_count'

## Filter settings ##
## Defaults
c.mintotal = 3000;
c.minexpr = 5;
c.maxexpr = Inf;
c.minnumber = 1;
c.downsample = F;
c.dsn = 1;
c.rseed = 17000;
c.hkn = FALSE;
c.sfn = FALSE;
c.fgenes = c()
c.cgenes = c()
c.docc = TRUE             ## Do cell cycle correction
c.docc.custom = FALSE     ## - use custom cell-cycle genes
c.docc.custom.genes = c("Malat1", "Lars2", "Mki67", "Pcna-ps2", "Hsp90aa1", "Jun", "Fos")


## To implement into script (remove all genes with these prefixes)
c.filter.ercc = TRUE
c.filter.mito = TRUE

## Annotation dataset ##
ca.dataset = '$section_filter.annot_dataset'

#if str($section_filter.filt.doit) == "T":
c.filter.ercc = as.logical( '$section_filter.filt.filter_ercc.value' )
c.filter.mito = as.logical( '$section_filter.filt.filter_mito.value')
c.fgenes = c( $section_filter.filt.f_genes )
c.cgenes = c( $section_filter.filt.c_genes )

   #if str($section_filter.filt.docc.doit) == "no"
c.docc = FALSE
c.docc.custom = FALSE
   #elif str($section_filter.filt.docc.doit) == "custom"
c.docc = TRUE
c.docc.custom = TRUE
c.docc.custom.genes = c($section_filter.filt.docc.genes)
   #elif str($section_filter.filt.docc.doit) == "auto"
c.docc = TRUE
c.docc.custom = FALSE
   #end if

   #if str($section_filter.filt.extra.useit) == "advanced_options":
c.hkn = as.logical( '$section_filter.filt.extra.hkn' )
c.sfn = as.logical( '$section_filter.filt.extra.sfn' )
c.mintotal = as.integer( '$section_filter.filt.extra.mintotal' )
c.minexpr = as.integer( '$section_filter.filt.extra.minexpr' )
c.maxexpr = as.integer( '$section_filter.filt.extra.maxexpr' )
c.minnumber = as.integer( '$section_filter.filt.extra.minnumber' )
        #if $section_filter.filt.extra.dsn:
c.downsample = T;
c.dsn = as.integer( '$section_filter.filt.extra.dsn' )
        #end if
c.rseed = as.integer( '$section_filter.filt.extra.filter_rseed' )
    #end if
#end if

## Regression ##
c.dobatchregression = TRUE
c.dobatchregression.regexcapture = "P\\d+_B([0-9]+)_.*"

## Clustering settings ##
##
## Defaults
ck.clustnr = 10;
ck.bootnr = 50;
ck.metric = 'pearson';
ck.dogap = FALSE;
ck.semethod = 'Tibs2001SEmax';
ck.sefactor = .25;
ck.bgap = 50;
ck.cln = 0;
ck.rseed = 17000;

## To incorporate
ck.funcluster = 'kmedoids'

ck.metric = '$section_clustering.metric'
ck.dogap = as.logical( '$section_clustering.gapstats.dogap.value' )
#if str($section_clustering.gapstats.dogap) == "T"
ck.clustnr = as.integer( '$section_clustering.gapstats.clustnr' )
ck.bgap = as.integer( '$section_clustering.gapstats.bgap' )
ck.semethod = '$section_clustering.gapstats.semethod.value'
ck.sefactor = as.numeric( '$section_clustering.gapstats.sefactor' )
#elif str($section_clustering.gapstats.dogap) == "F"
ck.cln = as.integer( '$section_clustering.cln' )
#end if
ck.bootnr = as.integer( '$section_clustering.bootnr' )
ck.rseed = as.integer( '$section_clustering.kmeans_rseed' )


## Need to implement comptsne settings
ct.fast = FALSE
ct.sammonmap = FALSE
ct.perplexity = 30
ct.rseed = 15555
ct.initial = TRUE

ct.fast = as.logical( '$section_compt.fast.value' )
ct.sammonmap = as.logical( '$section_compt.sammonmap.value' )
ct.initial = as.logical( '$section_compt.compt_rand.initial.value' )
#if str($section_compt.compt_rand.initial) == "No"
ct.rseed = as.integer( '$section_compt.compt_rand.rseed' )
#end if

## Outlier settings ##
##
## Defaults
co.outminc = 5;
co.outlg = 2;
co.probthr = 1e-3;
co.outdistquant = 0.95;

co.outminc = as.integer( '$section_outlier.outminc' )
co.outlg = as.integer( '$section_outlier.outlg' )
co.probthr = as.numeric( '$section_outlier.probthr' )
co.outdistquant = as.numeric( '$section_outlier.probthr' )
co.dorandforest = TRUE

## Heatmap Settings ##
cm.hmethod = 'single'

## Output settings ##
out.pdf.clusterqc = '$out_pdf_clusterqc'
out.pdf.heatmaps = '$out_pdf_heatmaps'
out.pdf.tsnes = '$out_pdf_tsnes'
out.rds = '$out_rdat'
        </configfile>
    </configfiles>
    <!-- Filter -->
    <inputs>
        <section name="section_filter" title="Filtering, Annotation, and Normalisation" expanded="true" >
            <param name="inp_count" type="data" format="rdata" label="Count matrix" help="A spreadsheet file with the first row indicating cell IDs, and the first column indicating transcript or gene IDs" />
            <param name="annot_dataset" type="select" label="Annotation Reference" >
                <option value="mmusculus_gene_ensembl">Mouse (GRCm38.p6)</option>
                <option value="drerio_gene_ensembl" >Zebrafish (GRCz11)</option>
                <option value="hsapiens_gene_ensembl" >Human (GRCh38.p12)</option>
            </param>
            <conditional name="filt" >
                <param name="doit" type="select" label="Perform filtering?"  >
                    <option value="T" selected="true" >Yes</option>
                    <option value="F" >No</option>
                </param>
                <when value="F" />
                <when value="T" >
                    <conditional name="extra" >
                        <param name="useit" type="select" label="Filtering Parameters" >
                            <option value="use_defaults" selected="true" >Use Defaults</option>
                            <option value="advanced_options" >Advanced Options</option >
                        </param>
                        <when value="use_defaults" />
                        <when value="advanced_options" >
                            <param name="mintotal" type="integer" value="3000" min="1" label="Minimum total transcripts" help="Discard cells with less than this number of total transcripts before normalisation." />
                            <param name="minexpr" type="integer" value="5" min="1" label="Minimum expressed genes" help="Discard genes that do not express a minimum of this number of transcripts after normalisation."/>
                            <param name="maxexpr" type="integer" value="500" min="0" label="Maximum expressed genes" help="Discard genes that express more than this number of transcripts after normalisation. Useful if genes have oversaturated counts derived from UMI data. Set to 0 to disable this step." />
                            <param name="minnumber" type="integer" value="1" label="Minimum Cells" help="Discard genes that do not have the minimum expressed transcripts in at least this number of cells" />
                            <param name="dsn" type="integer" value="1" min="1" optional="true" label="Downsample counts" help="Average transcripts across this many samples. If this is set to 1, then sampling noise should be comparable across cells. For higher values, the data approximates median normalisation." />
                            <param name="filter_rseed" type="integer" value="17000" min="0" label="Seed value (for reproducibility)" />
                            <param name="hkn" type="boolean" truevalue="T" falsevalue="F" checked="false" label="Do Housekeeping Normalisation?" />
                            <param name="sfn" type="boolean" truevalue="T" falsevalue="F" checked="false" label="Perform Size Factor Normalisation?" />
                        </when>
                    </conditional>

                    <param name="filter_ercc" type="boolean" checked="true" label="Remove ERCC genes" />
                    <param name="filter_mito" type="boolean" checked="true" label="Remove mitochondrial genes" />

                    <param name="f_genes" type="text" label="List of explicit gene names to filter out" >
                        <expand macro="sanitize_genes" />
                    </param>
                    <param name="c_genes" type="text" label="Discard any genes significantly correlated or anti-correlated to these genes" >
                        <expand macro="sanitize_genes" />
                    </param>

                    <conditional name="docc">
                        <param name="doit" type="select" label="Perform cell-cycle correction?" >
                            <option value="auto">Automatic</option>
                            <option value="custom">Custom</option>
                            <option value="no">No</option>
                        </param>
                        <when value="no" />
                        <when value="auto" />
                        <when value="custom" >
                            <param name="genes" type="text" label="List of explicit gene names to correct against" >
                                <expand macro="sanitize_genes" />
                            </param>
                        </when>
                    </conditional>
                </when>
            </conditional>
        </section>

        <!-- Kmeans -->
        <section name="section_clustering" title="Clustering" expanded="true" >
            <param name="metric" type="select" label="Distance metric">
                <option value="pearson" selected="true" />
                <option value="spearman" />
                <option value="kendall" />
                <option value="euclidean" />
                <option value="maximum" />
                <option value="manhattan" />
                <option value="canberra" />
                <option value="binary" />
                <option value="minkowski" />
            </param>

            <conditional name="gapstats">
                <param name="dogap" type="select" label="Use gap statistics to determine clusters" >
                    <option value="T" selected="true" >Yes</option>
                    <option value="F" >No</option>
                </param>

                <when value="F" >
                    <param name="cln" type="integer" value="0" min="0" label="Number of clusters for k-means" />
               </when>
                <when value="T" >
                    <param name="clustnr" type="integer" value="30" min="0" label="Maximum number of clusters for the computation of the gap statistic" help="If more major cell types are expected, a higher number than 30 should be chosen." />
                    <param name="bgap" type="integer" value="50" min="1" label="Number of bootstraps to run the gap statistic calculation" />
                    <param name="semethod" type="select" label="Method used for determining first local maximum" >
                        <option value="Tibs2001SEmax" selected="true" />
                        <option value="globalmax" />
                        <option value="firstmax" />
                        <option value="firstSEmax" />
                        <option value="globalSEmax" />
                    </param>

                    <param name="sefactor" type="float" value="0.25" min="0.0001" max="1" label="Fraction of the standard deviation that the local maximum must differ from neighbouring points." />
                </when>
            </conditional>

            <param name="bootnr" type="integer" value="50" min="1" label="Number of bootstraps for clustering" />
            <param name="kmeans_rseed" type="integer" value="17000" min="1" label="Seed value (for reproducibility)" />
        </section>
        <!-- tSNE -->
        <section name="section_compt" title="tSNE Settings" expanded="false" >
            <param name="fast" type="boolean" checked="true" label="Use fast method?" />
            <param name="sammonmap" type="boolean" checked="false" label="Use Sammon map to perform dimensional reduction instead of tSNE" />
            <conditional name="compt_rand" >
                <param name="initial" type="select" label="Initialise tSNE map with point-to-point distances" help="Uses classical multidimensional scaling instead of a random seed" >
                    <option value="yes" selected="true" >Yes</option>
                    <option value="no">No</option>
                </param>
                <when value="yes" />
                <when value="no" >
                    <param name="rseed" type="integer" value="15555"  label="Seed value (for reproducibility)" />
                </when>
            </conditional>
        </section>
        
        <!-- Outlier -->
        <section name="section_outlier" title="Outlier Detection" expanded="true" >
            <param name="outminc" type="integer" value="5" min="1" label="Expression cutoff threshold for outlier genes"  />
            <param name="probthr" type="float" value="1e-3" min="1e-8" max="1" label="Probability threshold of observing a given gene expression level in a cell" help="If lower than this cutoff, the cell is considered an outlier for this gene." />
            <param name="outlg" type="integer" value="2" min="1" label="Minimal number of outlier genes required to flag an outlier cells" />
            <param name="outdistquant" type="select" label="Merge cells into outlier clusters if their similarity exceeds this quantile in a similarity distribution for all cell pairs" >
                <option value="0.25">first (0.25)</option>
                <option value="0.50">second (0.50)</option>
                <option value="0.75">third (0.75)</option>
            </param>
        </section>
        <param name="out_rdat_query" type="select" label="Output R object for further analysis?" >
            <option value="yes" selected="true" >Yes</option>
            <option value="no">No</option>
        </param>
    </inputs>
    <outputs>
        <data name="out_pdf_clusterqc" format="pdf" label="${tool.name} on ${on_string}: Cluster QC" />
        <data name="out_pdf_heatmaps" format="pdf" label="${tool.name} on ${on_string}: Heatmaps" />
        <data name="out_pdf_tsnes" format="pdf" label="${tool.name} on ${on_string}: tSNEs" />
        <data name="out_rdat" format="rdata" label="${tool.name} on ${on_string}: tSNE RData" >
            <filter>str(out_rdat_query) == "yes"</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <!-- Filter -->
            <param name="inp_count" value="transcript_counts_intestine_sub.tsv" />
            <!-- These test params are MANDATORY due to the reduced size of the
                 input set (due to file size constraints) -->
            <param name="do_filter" value="T" />
            <param name="do_filter_defaults" value="advanced_options" />
            <param name="mintotal" value="10" />
            <param name="minexpr" value="1" />
            <param name="maxexpr" value="2000" />
            <!-- Outlier -->
            <!-- ... With reduced minc -->
            <param name="inp_rdat_outlier" value="trans_outlier_in.rds" />
            <param name="outminc" value="1" />
            <!-- tSNE -->
            <output name="out_pdf_heatmaps" value="out_1.html" />
            <output name="out_rdat" value="out_tsne1.rdat" />
        </test>
        <!-- manual gap statistics -->
        <test>
            <!-- Filter -->
            <param name="inp_count" value="transcript_counts_intestine_sub.tsv" />
            <!-- See message from previous test .. -->
            <param name="do_filter" value="T" />
            <param name="do_filter_defaults" value="advanced_options" />
            <param name="mintotal" value="10" />
            <param name="minexpr" value="1" />
            <param name="maxexpr" value="2000" />
            <!-- Kmeans -->
            <!-- ... Auto gap with gap params -->
            <param name="inp_rdat_kmeans" value="trans_filter_ds.rds" />
            <param name="clustnr" value="5" />
            <param name="bgap" value="10" />
            <param name="semethod" value="globalSEmax" />
            <param name="sefactor" value="0.6" />
            <!-- Outlier -->
            <!-- ... With reduced minc -->
            <param name="inp_rdat_outlier" value="trans_outlier_in.rds" />
            <param name="outminc" value="1" />
            <!-- tSNE -->
            <output name="out_pdf_heatmaps" value="out_2.html" />
            <output name="out_rdat" value="out_tsne2.rdat" />
        </test>
        <!-- complex run -->
        <test>
            <!-- Filter -->
            <param name="inp_count" value="transcript_counts_intestine_sub.tsv" />
            <param name="do_filter" value="T" />
            <param name="do_filter_defaults" value="advanced_options" />
            <param name="mintotal" value="10" />
            <param name="minexpr" value="1" />
            <param name="maxexpr" value="2000" />
            <param name="dsn" value="3" />
            <!-- Kmeans -->
            <!-- ... Set k-value, no gap, no R obj, metrics and bootrepl. -->
            <param name="inp_rdat_kmeans" value="trans_filter_ds.rds" />
            <param name="metric" value="manhattan" />
            <param name="cln" value="6" />
            <param name="dogap" value="T" />
            <param name="bootnr" value="10" />
            <!-- Outlier -->
            <!-- ... No R out, other opts-->
            <param name="inp_rdat_outlier" value="trans_outlier_in.rds" />
            <param name="outminc" value="1" />
            <param name="probthr" value="1e-5" />
            <param name="outlg" value="10" />
            <param name="outdistquant" value="0.50" />

            <!-- tSNE -->
            <param name="use_gexpr" value="Yes" />
            <repeat name="geneset">
                <param name="genes" value="1110007C09Rik__chr13+1110037F02Rik__chr4+1300002K09Rik__chr4" />
            </repeat>
            <repeat name="geneset">
                <param name="genes" value="0610010K14Rik__chr11+1500009L16Rik__chr10" />
            </repeat>
            <param name="regex" value="[^_]+__" />
            <output name="out_pdf_heatmaps" value="out_3.html" />
            <output name="out_rdat" value="out_tsne3.rdat" />
        </test>
    </tests>

    <help><![CDATA[

*******
RaceID3
*******

RaceID pipeline for scRNA, performs:
 * filtering
 * normalisation
 * k-means clustering
 * outlier detection

Generates heatmaps, tSNE plots, and an R object which can be passed into the RaceID DiffGenes tool for expression analysis between different sets of clusters.

**Filtering**

This takes a count matrix/spreadsheet with cellIDs as columns and geneIDs/transcriptIDs as rows, and filters based on standard single-cell RNA pre-processing methods (minimum/maximum transcript expression in a minimum of X number of cells). A filtered matrix is produced as output

**K-means Clustering**

This performs k-means clustering and plots gap statistics, jaccard similarity, silhoutte plots, and preliminary heatmap.

**Outlier Detection**

This performs outlier detection by calibrating against a background noise model within each cluster, and searching for cells that fall outside of the transcript count distribution for that gene (modelled as a negative binomial). Cells that are outliers for more than a user-set amount of genes are suspected as being outlier cells.

**tSNE plots**

Generates multiple tSNE plots with custom expression highlighting for gene subsets of interest. A tSNE map can be drawn for original clusters (derived via k-means) and final clustering (derived from outliers). Any number of genes subsets of interest can be specified to measure expression within clusters for related marker genes or genes characterising a cell type.

    ]]></help>
    <expand macro="citations" />
</tool>
