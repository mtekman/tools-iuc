<tool id="iqtree_1" name="IQtree" version="0.4" >

  <description>Efficient phylogenomic software by maximum likelihood</description>

  <macros>
    <import>iqtree.command.xml</import>
    <import>iqtree.inputs.xml</import>

 </macros>

  <requirements>
    <requirement type="package" version="1.5.5">iqtree</requirement>
  </requirements> 

  <expand macro="command" />
  
  <expand macro="inputs" />
  
  <outputs>
    <data name='bionj' format='txt' from_work_dir="*.bionj" />
    <data name='ckp.gz' format='txt' from_work_dir="*.ckp.gz" />
    <data name='contree' format='txt' from_work_dir="*.contree" />
    <data name='log' format='txt' from_work_dir="*.log" />
    <data name='iqtree' format='txt' from_work_dir="*.iqtree" />
    <data name='mldist' format='txt' from_work_dir="*.mldist" />
    <data name='treefile' format='txt' from_work_dir="*.treefile" />
    <data name='model' format='txt' from_work_dir="*.model" />
    <data name='splits.nex' format='txt' from_work_dir="*.splits.nex" />    
  </outputs>

  <tests>
    <test>
      <param name="seed" value="1257" />
      <param name="st" value="AA" />
      <param name="s" value="example.phy" />
      <param name="m" value="TESTNEW" />
      <param name="msub" value="nuclear" />
      <param name="madd" value="LG4M,LG4X" />
      <param name="merit" value="AICc" />
      <param name="bb" value="2000" />


      <output name='bionj' ftype="txt" >
    	<assert_contents>
    	  <has_text_matching expression=".*Human.*Whale.*" />
    	</assert_contents>
      </output>
            
      <output name='iqtree' ftype="txt" >
    	<assert_contents>
    	  <has_text_matching expression="VT\+F\+R3(\s+((-|\d|\.)+))+" />
    	</assert_contents>
      </output>
      
      <output name='mldist' ftype="txt" >
    	<assert_contents>
    	  <has_line_matching expression="^Frog(\s+((\d|\.)+))+\s+$" />
    	  <has_line_matching expression="^Whale(\s+((\d|\.)+))+\s+$" />
    	  <has_line_matching expression="^Cow(\s+((\d|\.)+))+\s+$" />
    	</assert_contents>
      </output>

      <output name='treefile' ftype="txt" >
      	<assert_contents>
      	  <has_line_matching expression="\(LngfishAu:(\d|\..)+,\(LngfishSA:(\d.)+,.*" />
      	</assert_contents>
      </output>

      <output name='contree' ftype="txt" >
      	<assert_contents>
      	  <has_line_matching
    	      expression="\(LngfishAu:(\d|\..)+,\(LngfishSA:(\d.)+,.*\)\d+:(\d|\.)+,.*" />
      	</assert_contents>
      </output>

      <output name='splits.nex' ftype="txt" >
      	<assert_contents>
      	  <has_line line="BEGIN Splits;" />
    	  <has_line line="END; [Splits]" />
      	</assert_contents>
      </output>
      
    </test>
    
    <test>
      <param name='s' value='example.phy' />
                
      <!-- <output name='log' ftype="txt"  > -->
      <!-- 	<assert_contents> -->
      <!-- 	  <has_text_matching -->
      <!-- 	 expression="^Alignment has 17 sequences with 1998 columns and 1152 patterns.*" /> -->
      <!-- 	</assert_contents> -->
      <!-- </output> -->
      
      <output name='iqtree' ftype="txt" >
    	<assert_contents>
    	  <has_text_matching expression=".*Human.*Whale.*" />
    	</assert_contents>
      </output>
      
      <output name='treefile' ftype="txt" >
      	<assert_contents>
      	  <has_text_matching expression="\(LngfishAu:(\d|\..)+,\(LngfishSA:(\d.)+,.*" />
      	</assert_contents>
      </output>

      <output name='model' ftype="txt" >
      	<assert_contents>
      	  <has_line_matching expression="^JC\s+\d+(\s(\-|\d|\.)+)+.*" />
      	</assert_contents>
      </output>      
    </test>
    
  </tests>

  <help>
More information can be found here: http://www.iqtree.org/doc/
  </help>

  <citations>
    <citation type="doi">10.1093/molbev/msu300</citation>
    <citation type="doi">10.1093/molbev/mst024</citation>
  </citations>
    
</tool>
